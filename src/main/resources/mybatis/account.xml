<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="account">
	<!-- 데이터 전체 조회 -->
	<select id="list" resultType="AccountVO" >
		select accnt_id, nickname, name, user_type, phone, id, s_passwd, last_login from account
	</select>
	
	<!-- id 중복검사 -->
	<select id="idCheck" parameterType="java.lang.String" resultType="java.lang.String" >
		select id from account where id=#{id}
	</select>
	
	<!-- 닉네임 중복검사 -->
	<select id="nicknameCheck" parameterType="java.lang.String" resultType="java.lang.String">
		select nickname from account where nickname=#{nickname}
	</select>
	
	<!-- 회원가입 데이터 삽입 -->
	<insert id="join" parameterType="AccountVO">
		insert into account(accnt_id, nickname, name, user_type, phone, id, s_passwd) 
		values(accntseq.nextval, #{nickname}, #{name}, #{user_type, jdbcType=VARCHAR}, #{phone, jdbcType=VARCHAR}, #{id}, #{s_passwd})
	</insert>
	
	<!-- 네이버 회원가입 -->
	<insert id="naverJoin" parameterType="AccountVO">
		insert into account(accnt_id, nickname, name, user_type, id) 
		values(accntseq.nextval, #{nickname}, #{name}, #{user_type, jdbcType=VARCHAR}, #{id})
	</insert>
	<!-- 네이버 id 중복검사 -->
	<select id="naverIdCheck" parameterType="java.lang.String" resultType="java.lang.String" >
		select id from account where id=#{id}
	</select>
	<!-- 네이버 id accnt_id 가져오기 -->
	<select id="getAccnt_id" parameterType="java.lang.String" resultType="java.lang.Integer">
		select accnt_id from account where id=#{id}
	</select>
	
	<!-- 로그인 처리 -->
	<select id="login" parameterType="map" resultType="AccountVO">
		select * from account where id=#{id} and s_passwd=#{s_passwd}
	</select>
	
	<!-- 로그인 시 날짜 입력 -->
	<update id="last_login" parameterType="java.lang.Integer">
		update account set last_login=sysdate where accnt_id=#{accnt_id}
	</update>
	
	<!-- 로그인 시 클라이언트 ip, browser 등의 정보 삽입 -->
	<insert id="login_history" parameterType="LoginHistoryVO">
		insert into login_history(accnt_id, is_mobile, ip, browser, os)
		values(#{accnt_id}, #{is_mobile, jdbcType=VARCHAR}, #{ip, jdbcType=VARCHAR}, #{browser, jdbcType=VARCHAR}, #{os, jdbcType=VARCHAR})
	</insert>
	
	<!-- accnt_id로 회원 정보 조회 -->
	<select id="account" parameterType="java.lang.Integer" resultType="AccountVO">
		select accnt_id, nickname, name, user_type, phone, id, s_passwd, last_login from account where accnt_id=#{accnt_id}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="user_typeUpdate" parameterType="AccountVO">
		update account set nickname=#{nickname}, name=#{name}, user_type=#{user_type, jdbcType=VARCHAR},
		phone=#{phone, jdbcType=VARCHAR}, s_passwd=#{s_passwd, jdbcType=VARCHAR} where accnt_id=#{accnt_id}
	</update>
</mapper>
